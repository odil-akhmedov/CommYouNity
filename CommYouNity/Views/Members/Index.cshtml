@model CommYouNity.Models.MemberTaskView
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<div class="formbg">
    <div class="header">
        <br />
        <h1>Neighbor List</h1>
    </div>

    <hr />
    <p>
        @Html.ActionLink("Add a Neighbor", "Create")
    </p>

    @using (Html.BeginForm("Index", "Members", FormMethod.Get))
    {
        <p class="medtxtsize;"> Find a member by name, phone number, email or community name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string) <input type="submit" value="Search" style="align-content:center; vertical-align:middle;" /></p>
    }
    @{if (Model.member.Count() > 0)
    {
        <table class="table">
            <tr>
                <th>
                    @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>



                <th>
                    @Html.ActionLink("Phone Number", "Index", new { sortOrder = ViewBag.PhoneSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>



                <th>
                    @Html.ActionLink("Email Address", "Index", new { sortOrder = ViewBag.EmailSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.singleMember.AboutMe)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.singleMember.ImgSrc)
                </th>
                <th>
                    @Html.ActionLink("CommYOUnity Group Name", "Index", new { sortOrder = ViewBag.CommunitySortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th></th>
            </tr>
            @foreach (var item in Model.pagedMember)
            {
                <tr>
                    <td class="medtxtsize center">
                        @Html.DisplayFor(modelItem => item.FullName)
                    </td>
                    <td class="medtxtsize center">
                        @Html.DisplayFor(modelItem => item.Phone)
                    </td>
                    <td class="medtxtsize center">
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td class="medtxtsize center">
                        @Html.DisplayFor(modelItem => item.AboutMe)
                    </td>
                    <td>
                        <div class="img">
                            @{if (item.ImgSrc != "")
                            {
                                <a href="@item.ImgSrc"><img src="@item.ImgSrc" alt="@item.FullName" width="150" height="100" /></a>
                            }
                            else
                            {
                                <img src="~/img/no_image_available.jpg" alt="No image available" width="150" height="100" />
                            }
                            }

                        </div>
                    </td>
                    <td class="medtxtsize center">
                        @Html.DisplayFor(modelItem => item.Community.Name)
                    </td>
                    <td class="center">
                        @{if (Request.IsAuthenticated)
                        {
                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }); <br />
                            @Html.ActionLink("Delete", "Delete", new { id = item.Id });<b></b>
                        }
                        }
                        @Html.ActionLink("Details", "Details", new { id = item.Id })
                    </td>

                </tr>
            }
        </table>
    }
    else
    {
        <p>No results for "<span>@ViewBag.SearchString</span>" Please try again.</p>
    }
    }

    <table class="table medtxtsize center">
        <a href="MemberTasks/Index">Tasks</a>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.singleMember.CommunityId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.singleMember.FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.singleMemberTask.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.singleMemberTask.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.singleMemberTask.Budget)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.singleMemberTask.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.singleMemberTask.Priority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.singleMemberTask.Flag)
            </th>
            <th></th>

            @foreach (var item in Model.memberTask)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Member.Community.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Member.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Budget)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Priority)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Flag)
                </td>
                <td>
                    @*@Html.ActionLink(linkText: "Edit", actionName: "Edit", controllerName: "MemberTasks", routeValues: new { id = item.Id }, htmlAttributes: null)|
                        @Html.ActionLink(linkText: "Details", actionName: "Details", controllerName: "MemberTasks", routeValues: new { id = item.Id }, htmlAttributes: null)|
                        @Html.ActionLink(linkText: "Delete", actionName: "Delete", controllerName: "MemberTasks", routeValues: new { id = item.Id }, htmlAttributes: null)*@
            </tr>
            }
        </table>
        <br />
    <div class="medtxtsize">
        page @(Model.pagedMember.PageCount < Model.pagedMember.PageNumber ? 0 : Model.pagedMember.PageNumber) of
        @Model.pagedMember.PageCount
    </div>
            @Html.PagedListPager(Model.pagedMember, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
       

    </div>