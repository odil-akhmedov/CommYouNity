@model CommYouNity.Models.CommunityTaskView
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<div class="formbg">
    @{
        ViewBag.Title = "Communities List";
    }

    <h2>Communities List</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>

    @using (Html.BeginForm("Index", "Communities", FormMethod.Get))
    {
        <p> Find a community by name, location, officer name or email: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string) <input type="submit" value="Search" /></p>
    }
    <table class="table">
        <tr>

            <th>
                @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Location", "Index", new { sortOrder = ViewBag.LocationSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.singleCommunity.Description)
            </th>
            <th>
                @Html.ActionLink("OfficerName", "Index", new { sortOrder = ViewBag.OfficerNameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Email", "Index", new { sortOrder = ViewBag.EmailSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.singleCommunity.ImgSrc)
            </th>
        </tr>
        @foreach (var item in Model.community)
        {
            <tr>

                <td>
                    @Html.ActionLink(linkText: item.Name, actionName: "Index", controllerName: "Members", routeValues: new { id = item.Id }, htmlAttributes: null)
                    @*@Html.DisplayFor(modelItem => item.Name)*@
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Location.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OfficerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    <div class="img">
                        @{if (item.ImgSrc != null)
                        {
                            string[] images = item.ImgSrc.Split(';');
                            <a href="@images[0]"><img src="@images[0]" alt="@item.Name" width="150" height="100" /></a>
                        }
                        else
                        {
                            <a href="@item.ImgSrc"><img src="@item.ImgSrc" alt="@item.Name" width="150" height="100" /></a>
                        }
                        }
                    </div>
                    @*@Html.DisplayFor(modelItem => item.ImgSrc)*@
                </td>

                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }


    </table>

    <table class="table">
        Tasks
        <tr>
            <th>
                Type
            </th>
            <th>
                Owner
                @*@Html.DisplayNameFor(model => model.Community.Name)*@
            </th>
            <th>
                @Html.DisplayNameFor(model => model.singleCommunityTask.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.singleCommunityTask.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.singleCommunityTask.Budget)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.singleCommunityTask.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.singleCommunityTask.Priority)
            </th>
            <th></th>

            @foreach (var item in Model.communityTask)
            {
            <tr>
                <td id="taskOrAlert">
                    @{if (item.Flag == false)
                    {
                        <p>Alert</p>
                    }
                    else if (item.Flag == true)
                    {
                        <p>Task</p>
                    }
                    else
                    {
                        Html.DisplayFor(modelItem => item.Flag);
                    }
                    }

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Community.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Budget)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Priority)
                </td>
                <td>
                    @*@Html.ActionLink(linkText: "Edit", actionName: "Edit", controllerName: "CommunityTasks", routeValues: new { id = item.Id }, htmlAttributes: null)|
                        @Html.ActionLink(linkText: "Details", actionName: "Details", controllerName: "CommunityTasks", routeValues: new { id = item.Id }, htmlAttributes: null)|
                        @Html.ActionLink(linkText: "Delete", actionName: "Delete", controllerName: "CommunityTasks", routeValues: new { id = item.Id }, htmlAttributes: null)*@
            </tr>
            }
        </table>
        <br />
        Page @(Model.pagedCommunity.PageCount < Model.pagedCommunity.PageNumber ? 0 : Model.pagedCommunity.PageNumber) of @Model.pagedCommunity.PageCount

        @Html.PagedListPager(Model.pagedCommunity, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    </div>
