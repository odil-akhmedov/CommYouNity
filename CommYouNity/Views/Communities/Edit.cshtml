@model CommYouNity.Community

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Communities", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Community</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OfficerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OfficerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OfficerName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.ImgSrc, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ImgSrc, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ImgSrc, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.LocationId, "LocationId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LocationId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<a href="@Model.ImgSrc"><img src="@Model.ImgSrc" alt="@Model.Name" width=" 150" height="100" /></a>*@

        @*@{if (Model.ImgSrc != null)
            {
                string[] images = Model.ImgSrc.Split(';');
                for (int i = 0; i < images.Count() - 1; i++)
                {
                    <a href="@images[i]"><img src="@images[i]" alt="@Model.Name" width="150" height="100" /></a>
                    <img src="@Url.Content("/img/delete.png")" alt="Remove picture." />
                }
            }
            }*@
        <div class="form-field">
            <p>Select pictures:</p>
            <div class="upload-container">
                @{if (Model.ImgSrc != null)
                {
                    string[] images = Model.ImgSrc.Split(';');
                    for (int i = 0; i < images.Count() - 1; i++)
                    {
                        string imageId = "file" + (i + 1).ToString();
                        <div class="upload">
                            <input type="file" name="files" id="@imageId" />
                            <a href="@images[i]"><img src="@images[i]" alt="@Model.Name" width="150" height="100" /></a>
                            <img src="@Url.Content("/img/delete.png")" alt="Remove picture." />
                        </div>
                    }
                }
                @*}
                @{if (Model.ImgSrc != null)
                {
                    string[] images = Model.ImgSrc.Split(';');*@

                    <div class="upload">
                        <input type="file" name="files" id="file1" @*value="@images.Count()"*@ />
                        <img src="@Url.Content("/img/delete.png")" alt="Remove picture." />
                    </div>
                @*}
                }*@
            </div>
        </div>
        @*<fieldset>
                <legend>Update an image a file</legend>
                <div class="editor-field">
                    @Html.TextBox("file", "", new { type = "file" })
                </div>
                <div class="editor-field">
                        <input type="submit" value="Upload" />
                    </div>
            </fieldset>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            var currentImage = 1;
            $("body").on("change", "input[name='files']", function () {
                var pathToRemoveIcon = "@Url.Content("~/img/delete.png")";
                currentImageId = $("input[name='files']").attr('id');
                //alert($("input[name='files']").attr('id'));
                alert(currentImageId);
                currentImage = currentImage + 1;
                var htmlToAppend = '<div class="upload"><input type="file" name="files" id="file' + currentImage + '" /><img src="' + pathToRemoveIcon + '" alt="Remove picture." /></div>';
                $('.upload-container').append(htmlToAppend);
            }).on("click", ".upload img", function () {
                if ($(this).parent().siblings().length > 0) {
                    $(this).parent().remove();
                }
            });
        });
    </script>
}
